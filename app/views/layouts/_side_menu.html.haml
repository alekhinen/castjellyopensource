- if user_signed_in?
  .user-info-container
    .avatar-container
      =image_tag current_user.avatar.url, :class => "avatar"
    - if current_user.full_name
      %a.side-link.update{:href => "#{edit_user_registration_path}"}
        / =image_tag('icons/user.svg', :class => "side-icon")
        #{current_user.full_name}
    - else
      %a.side-link{:href => "#{edit_user_registration_path}"}
        =image_tag('icons/user.svg', :class => "side-icon")
        #{current_user.email}
    %a.update{:href => "#{edit_user_registration_path}"} Update Account
  .padder20

= form_tag(podcasts_path, :method => "get", id: "search-form") do
  = text_field_tag :search, params[:search], placeholder: "Search Podcasts"
  = submit_tag "Search", :name => nil, :class => "btn"

.padder20

%a.side-link{:href => "#{root_url}"}
  =image_tag('icons/home.svg', :class => "side-icon")
  Home
%a.side-link{:href => "#{saves_path}"}
  =image_tag('icons/star.svg', :class => "side-icon")
  Saved Shows
%a.side-link{:href => "#{podcasts_url}"}
  =image_tag('icons/plus.svg', :class => "side-icon")
  Add Content

.padder40

%a.side-link{:href => "#{subscriptions_path}"}
  =image_tag('icons/menu.svg', :class => "side-icon")
  All Content
- if user_signed_in?
  - # Get all podcast_id's that are associated with the current_user
  - @subscriptions = Subscription.where(:user_id => current_user.id).select(:podcast_id).to_sql
  - # Get all podcasts that have the same id's as the subscriptions and order by by which one was updated last
  - @podcasts = Podcast.where("id IN (#{@subscriptions})").order("updated_at DESC")
  - @podcasts.each do |podcast|
    %a.side-link{:href => "#{podcast_path(podcast)}", :style => "font-size: 10px;"}
      = image_tag('icons/arrow-right.svg', :class => "side-icon")
      #{podcast.title}

.padder40

- if user_signed_in?
  #{link_to "Logout", destroy_user_session_path, method: :delete, :class => 'btn'}
